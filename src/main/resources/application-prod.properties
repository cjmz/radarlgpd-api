# application-prod.properties - Configuração para Produção (Render)
# Usa variáveis de ambiente para segurança

# ============================================
# Server Configuration
# ============================================
# Render passa a PORT via variável de ambiente
server.port=${PORT:8080}
server.error.include-message=always
server.error.include-binding-errors=never
server.error.include-stacktrace=never

# ============================================
# Database Configuration (PostgreSQL do Render)
# ============================================
# OBRIGATÓRIO: Definir variáveis de ambiente no Render
# DATABASE_URL deve estar no formato JDBC: jdbc:postgresql://host:port/database
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexões (otimizado para Render free tier)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ============================================
# JPA / Hibernate Configuration
# ============================================
# IMPORTANTE: Em produção, use 'validate' ou 'none' após primeira migration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Performance
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ============================================
# Security / API Key
# ============================================
# OBRIGATÓRIO: Definir no Render como variável de ambiente
radarlgpd.api.key=${RADARLGPD_API_KEY}

# ============================================
# Rate Limiting
# ============================================
radarlgpd.rate-limit.requests-per-hour=${RADARLGPD_RATE_LIMIT:100}
radarlgpd.rate-limit.enabled=true

# ============================================
# Logging (Produção)
# ============================================
logging.level.root=INFO
logging.level.com.br.radarlgpd=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN

# Log para stdout (Render captura logs do container)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ============================================
# Actuator (Health Check)
# ============================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true

# ============================================
# CORS (Ajuste conforme necessário)
# ============================================
radarlgpd.cors.allowed-origins=${ALLOWED_ORIGINS:*}
radarlgpd.cors.allowed-methods=GET,POST,OPTIONS
radarlgpd.cors.allowed-headers=Authorization,Content-Type
radarlgpd.cors.allow-credentials=false

# ============================================
# Timezone
# ============================================
spring.jackson.time-zone=UTC
spring.jackson.serialization.write-dates-as-timestamps=false
